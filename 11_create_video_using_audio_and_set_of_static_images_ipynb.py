# -*- coding: utf-8 -*-
"""11_Create Video using Audio and set of static images.ipynb.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Shzfp6lVl7CFOz2yTPRuF2XKu6TxhCmU
"""

!pip install moviepy

from google.colab import files

# Upload files
uploaded = files.upload()

# Get a list of uploaded files
file_names = list(uploaded.keys())
print("Uploaded files:", file_names)

# Separate images and audio files (optional)
images = [file for file in file_names if file.endswith(('.jpg', '.webp', '.jpeg', '.png'))]
audio_files = [file for file in file_names if file.endswith(('.mp3', '.wav'))]

print("Images:", images)
print("Audio files:", audio_files)

from moviepy.editor import ImageClip, AudioFileClip, concatenate_videoclips

# Define the images and their duration (in seconds)
image_files = ['1.jpg', '2.webp', '3.jpg', '4.jpg']
    # Replace with your image file paths


image_duration = 3  # Duration each image will be displayed in seconds

# Create a list of ImageClips
image_clips = [
    ImageClip(img).set_duration(image_duration).resize(height=720)  # Adjust height as needed
    for img in image_files
]

# Concatenate the ImageClips into a single video
video = concatenate_videoclips(image_clips, method="compose")

# Add the audio file
audio_file = 'dark-engine-logo-141942.mp3' # Replace with your audio file path
audio = AudioFileClip(audio_file)

# Set the audio to the video
video = video.set_audio(audio)

# Adjust the video duration to match the audio's duration
video = video.set_duration(audio.duration)

# Output file path
output_path = "output_video.mp4"

# Write the video to a file
video.write_videofile(output_path, fps=24, codec="libx264")

from IPython.display import Video

# Display the video in a smaller frame (e.g., 320x240)
# Use output_path, which contains the file path of the video
Video(output_path, embed=True, width=320, height=240)